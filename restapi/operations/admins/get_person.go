// Code generated by go-swagger; DO NOT EDIT.

package admins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetPersonHandlerFunc turns a function with the right signature into a get person handler
type GetPersonHandlerFunc func(GetPersonParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPersonHandlerFunc) Handle(params GetPersonParams) middleware.Responder {
	return fn(params)
}

// GetPersonHandler interface for that can handle valid get person params
type GetPersonHandler interface {
	Handle(GetPersonParams) middleware.Responder
}

// NewGetPerson creates a new http.Handler for the get person operation
func NewGetPerson(ctx *middleware.Context, handler GetPersonHandler) *GetPerson {
	return &GetPerson{Context: ctx, Handler: handler}
}

/*
	GetPerson swagger:route GET /persons/{inn} admins getPerson

get person by inn

Gets person by inn
*/
type GetPerson struct {
	Context *middleware.Context
	Handler GetPersonHandler
}

func (o *GetPerson) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetPersonParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
